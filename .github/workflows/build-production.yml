# This is a basic workflow to help you get started with Actions

name: Build and push the tagged build to production

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Fetch latest version
        id: fetch_version
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
        
      - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        uses: docker/login-action@v2.1.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Build and push production images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        uses: docker/build-push-action@v3.2.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: ${{secrets.ACR_LOGIN_SERVER}}/contoso-website:latest,${{secrets.ACR_LOGIN_SERVER}}/contoso-website:${{ steps.fetch_version.outputs.TAG }}
    
  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image # Will wait for the execution of the previous job
    steps:
      - uses: actions/checkout@v2

      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          # Version of helm
          version: v3.3.1


      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Resource Group Name
          resource-group: mslearn-gh-pipelines-3951
          # AKS Cluster Name
          cluster-name: contoso-video


      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace production \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_LOGIN }} \
            --set dns.name=${{ secrets.DNS_NAME }} \
            --set image.tag=${GITHUB_REF##*/}
